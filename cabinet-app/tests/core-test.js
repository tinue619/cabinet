/**
 * –ü–†–û–°–¢–ï–ô–®–ê–Ø –î–ò–ê–ì–ù–û–°–¢–ò–ö–ê - –¢–û–õ–¨–ö–û –Ø–î–†–û
 * Infrastructure Layer - Basic Core Testing
 */

console.log('üß™ Testing core loading directly...');

// –ü—Ä–æ–±—É–µ–º –∑–∞–≥—Ä—É–∑–∏—Ç—å —è–¥—Ä–æ –Ω–∞–ø—Ä—è–º—É—é
const CORE_PATH = '../../new_core/index.js';

console.log('üìç Attempting to load core from:', CORE_PATH);

import(CORE_PATH)
    .then(coreModule => {
        console.log('‚úÖ CORE LOADED SUCCESSFULLY!', coreModule);
        
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º —ç–∫—Å–ø–æ—Ä—Ç—ã
        if (coreModule.SystemFactory) {
            console.log('‚úÖ SystemFactory found:', coreModule.SystemFactory);
            
            // –ü—Ä–æ–±—É–µ–º —Å–æ–∑–¥–∞—Ç—å —Å–∏—Å—Ç–µ–º—É
            const system = coreModule.SystemFactory.create();
            console.log('‚úÖ System created:', system);
            
            // –ü—Ä–æ–±—É–µ–º —Å–æ–∑–¥–∞—Ç—å –º–∞—Ç–µ—Ä–∏–∞–ª—ã
            const ldsp = system.createLDSP16();
            console.log('‚úÖ Material created:', ldsp);
            
            // –ü—Ä–æ–±—É–µ–º —Å–æ–∑–¥–∞—Ç—å —à–∫–∞—Ñ
            const cabinet = system.createCabinet({
                width: 800,
                height: 2000, 
                depth: 600,
                baseHeight: 100
            });
            console.log('‚úÖ Cabinet created:', cabinet);
            
            // –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º –ø–∞–Ω–µ–ª–∏
            cabinet.generate();
            console.log('‚úÖ Cabinet generated');
            
            // –ü–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ
            const stats = cabinet.getStats();
            console.log('‚úÖ Cabinet stats:', stats);
            
            // –°–∏–≥–Ω–∞–ª–∏–∑–∏—Ä—É–µ–º –æ —É—Å–ø–µ—Ö–µ
            window.dispatchEvent(new CustomEvent('cabinet-app-ready', {
                detail: { 
                    message: 'Core test successful',
                    system: system,
                    cabinet: cabinet
                }
            }));
            
        } else {
            throw new Error('SystemFactory not found in core module');
        }
    })
    .catch(error => {
        console.error('‚ùå CORE TEST FAILED:', error);
        
        // –î–µ—Ç–∞–ª—å–Ω–∞—è –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞
        console.error('Error details:', {
            message: error.message,
            stack: error.stack,
            attempted_path: CORE_PATH
        });
        
        window.dispatchEvent(new CustomEvent('cabinet-app-error', {
            detail: { 
                message: `Core test failed: ${error.message}`,
                path: CORE_PATH,
                stack: error.stack
            }
        }));
    });

// –≠–∫—Å–ø–æ—Ä—Ç –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
export default {
    name: 'Core Diagnostic',
    version: '1.0-core-test',
    corePath: CORE_PATH
};
