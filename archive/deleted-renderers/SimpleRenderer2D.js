// üéØ –ù–û–í–´–ô –ê–î–ê–ü–¢–ï–† –î–õ–Ø –ï–î–ò–ù–û–ì–û –î–í–ò–ñ–ö–ê
// –ó–∞–º–µ–Ω—è–µ—Ç —Å—Ç–∞—Ä—ã–π SimpleRenderer2D.js
// –û–¢–í–ï–¢–°–¢–í–ï–ù–ù–û–°–¢–¨: –¢–æ–ª—å–∫–æ –ø—Ä–æ—Å—Ç–∞—è –∞–¥–∞–ø—Ç–∞—Ü–∏—è –∫ –µ–¥–∏–Ω–æ–º—É –¥–≤–∏–∂–∫—É

import PanelEngine from '../../Universal2DPanelEngine.js';

export class SimpleRenderer2D {
    constructor(canvas) {
        this.canvas = canvas;
        this.ctx = canvas.getContext('2d');
        this.setupCanvas();
        
        console.log('üéØ SimpleRenderer2D —Ç–µ–ø–µ—Ä—å –∏—Å–ø–æ–ª—å–∑—É–µ—Ç –µ–¥–∏–Ω—ã–π –¥–≤–∏–∂–æ–∫');
    }

    setupCanvas() {
        const resizeCanvas = () => {
            const container = this.canvas.parentElement;
            this.canvas.width = container.clientWidth;
            this.canvas.height = container.clientHeight;
        };
        resizeCanvas();
        window.addEventListener('resize', resizeCanvas);
    }

    render(cabinetData) {
        console.log('üîç –î–∞–Ω–Ω—ã–µ –¥–ª—è —Ä–µ–Ω–¥–µ—Ä–∞:', cabinetData);
        
        // üîß –ü–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ –æ—Ç –∞–¥–∞–ø—Ç–µ—Ä–∞
        let dimensions = null;
        
        if (cabinetData && cabinetData.panels && cabinetData.data) {
            // –ù–æ–≤—ã–π —Ñ–æ—Ä–º–∞—Ç —á–µ—Ä–µ–∑ –∞–¥–∞–ø—Ç–µ—Ä
            dimensions = cabinetData.data.dimensions;
        } else if (cabinetData && cabinetData.dimensions) {
            // –ü—Ä—è–º—ã–µ —Ä–∞–∑–º–µ—Ä—ã
            dimensions = cabinetData.dimensions;
        } else {
            // –î–µ—Ñ–æ–ª—Ç–Ω—ã–µ —Ä–∞–∑–º–µ—Ä—ã
            dimensions = { width: 800, height: 2000, depth: 600 };
        }

        if (!dimensions) {
            console.log('‚ùå –ù–µ—Ç –¥–∞–Ω–Ω—ã—Ö —Ä–∞–∑–º–µ—Ä–æ–≤ –¥–ª—è —Ä–µ–Ω–¥–µ—Ä–∞');
            this.renderEmpty();
            return;
        }

        console.log('üìè –†–∞–∑–º–µ—Ä—ã —à–∫–∞—Ñ–∞:', dimensions);

        // ‚ú® –ú–ê–ì–ò–Ø: –µ–¥–∏–Ω—ã–π –¥–≤–∏–∂–æ–∫ –¥–µ–ª–∞–µ—Ç –í–°–Æ —Ä–∞–±–æ—Ç—É!
        PanelEngine.renderFullCabinet(this.canvas, { dimensions });
    }

    clear() {
        this.ctx.clearRect(0, 0, this.canvas.width, this.canvas.height);
    }

    renderEmpty() {
        this.clear();
        this.ctx.fillStyle = '#999';
        this.ctx.font = '16px sans-serif';
        this.ctx.textAlign = 'center';
        this.ctx.fillText('–°–æ–∑–¥–∞–π—Ç–µ —à–∫–∞—Ñ', this.canvas.width / 2, this.canvas.height / 2);
    }
}
