// üé® –ù–û–í–´–ô –ê–î–ê–ü–¢–ï–† –î–õ–Ø –ï–î–ò–ù–û–ì–û –î–í–ò–ñ–ö–ê
// –ó–∞–º–µ–Ω—è–µ—Ç —Å—Ç–∞—Ä—ã–π CabinetRenderer2D.js
// –û–¢–í–ï–¢–°–¢–í–ï–ù–ù–û–°–¢–¨: –¢–æ–ª—å–∫–æ –∞–¥–∞–ø—Ç–∞—Ü–∏—è –∫ –µ–¥–∏–Ω–æ–º—É –¥–≤–∏–∂–∫—É

import PanelEngine from '../../Universal2DPanelEngine.js';

/**
 * üé® –ê–¥–∞–ø—Ç–µ—Ä –¥–ª—è CabinetRenderer2D
 * –ò—Å–ø–æ–ª—å–∑—É–µ—Ç –µ–¥–∏–Ω—ã–π Universal2DPanelEngine
 */
export class CabinetRenderer2D {
    constructor(canvas) {
        this.canvas = canvas;
        this.ctx = canvas.getContext('2d');
        this.setupCanvas();
        
        console.log('üé® CabinetRenderer2D —Ç–µ–ø–µ—Ä—å –∏—Å–ø–æ–ª—å–∑—É–µ—Ç –µ–¥–∏–Ω—ã–π –¥–≤–∏–∂–æ–∫');
    }

    setupCanvas() {
        const resizeCanvas = () => {
            const container = this.canvas.parentElement;
            const dpr = window.devicePixelRatio || 1;
            
            this.canvas.width = container.clientWidth * dpr;
            this.canvas.height = container.clientHeight * dpr;
            this.canvas.style.width = container.clientWidth + 'px';
            this.canvas.style.height = container.clientHeight + 'px';
            
            this.ctx.scale(dpr, dpr);
        };
        
        resizeCanvas();
        window.addEventListener('resize', resizeCanvas);
    }

    // üéØ –ï–î–ò–ù–°–¢–í–ï–ù–ù–´–ô –ú–ï–¢–û–î - –≤—Å–µ –æ—Å—Ç–∞–ª—å–Ω–æ–µ –¥–µ–ª–∞–µ—Ç –¥–≤–∏–∂–æ–∫
    render(cabinetData) {
        if (!cabinetData || !cabinetData.data?.dimensions) {
            this.renderEmptyState();
            return;
        }

        // ‚ú® –ú–ê–ì–ò–Ø: –ø—Ä–æ—Å—Ç–æ –≤—ã–∑—ã–≤–∞–µ–º –µ–¥–∏–Ω—ã–π –¥–≤–∏–∂–æ–∫!
        PanelEngine.renderFullCabinet(this.canvas, {
            dimensions: cabinetData.data.dimensions
        });
        
        console.log('üé® –†–µ–Ω–¥–µ—Ä —á–µ—Ä–µ–∑ –µ–¥–∏–Ω—ã–π –¥–≤–∏–∂–æ–∫:', cabinetData.data.dimensions);
    }

    renderEmptyState() {
        this.ctx.clearRect(0, 0, this.canvas.clientWidth, this.canvas.clientHeight);
        
        const centerX = this.canvas.clientWidth / 2;
        const centerY = this.canvas.clientHeight / 2;
        
        this.ctx.fillStyle = '#999999';
        this.ctx.font = '16px sans-serif';
        this.ctx.textAlign = 'center';
        this.ctx.fillText('–°–æ–∑–¥–∞–π—Ç–µ —à–∫–∞—Ñ –¥–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞', centerX, centerY);
    }
    
    // –°–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç—å —Å–æ —Å—Ç–∞—Ä—ã–º API
    setZoom(zoom) { /* –µ–¥–∏–Ω—ã–π –¥–≤–∏–∂–æ–∫ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –º–∞—Å—à—Ç–∞–±–∏—Ä—É–µ—Ç */ }
    setOffset(x, y) { /* –µ–¥–∏–Ω—ã–π –¥–≤–∏–∂–æ–∫ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ —Ü–µ–Ω—Ç—Ä–∏—Ä—É–µ—Ç */ }
    resetView() { /* –µ–¥–∏–Ω—ã–π –¥–≤–∏–∂–æ–∫ —Å–∞–º —É–ø—Ä–∞–≤–ª—è–µ—Ç –≤–∏–¥–æ–º */ }
}
