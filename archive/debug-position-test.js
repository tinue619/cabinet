// üîç –¢–ï–°–¢ –ü–û–ó–ò–¶–ò–û–ù–ò–†–û–í–ê–ù–ò–Ø –ü–ê–ù–ï–õ–ï–ô
// –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–∞–∫ —Ä–∞—Å—Å—á–∏—Ç—ã–≤–∞—é—Ç—Å—è –ø–æ–∑–∏—Ü–∏–∏ –¥–Ω–∞ –∏ —Ü–æ–∫–æ–ª–µ–π

import { CABINET_DNA } from '../new_core/cabinet-dna.js';

// –°—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–µ —Ä–∞–∑–º–µ—Ä—ã —à–∫–∞—Ñ–∞
const x = 800;  // —à–∏—Ä–∏–Ω–∞
const y = 2000; // –≤—ã—Å–æ—Ç–∞  
const z = 600;  // –≥–ª—É–±–∏–Ω–∞
const t = 16;   // —Ç–æ–ª—â–∏–Ω–∞ –º–∞—Ç–µ—Ä–∏–∞–ª–∞
const b = 100;  // –≤—ã—Å–æ—Ç–∞ —Ü–æ–∫–æ–ª—è

console.log('üßÆ –¢–ï–°–¢ –ü–û–ó–ò–¶–ò–û–ù–ò–†–û–í–ê–ù–ò–Ø –ü–ê–ù–ï–õ–ï–ô');
console.log(`üìè –®–∫–∞—Ñ: ${x}√ó${y}√ó${z}–º–º, –º–∞—Ç–µ—Ä–∏–∞–ª: ${t}–º–º, —Ü–æ–∫–æ–ª—å: ${b}–º–º`);
console.log('');

// –¢–µ—Å—Ç–∏—Ä—É–µ–º –≤—Å–µ —Ñ–æ—Ä–º—É–ª—ã –ø–æ–∑–∏—Ü–∏–π
const positions = {
    '–ö—Ä—ã—à–∞': CABINET_DNA.GENERATION.POSITION_FORMULAS.TOP(x, y, z, t, b),
    '–î–Ω–æ': CABINET_DNA.GENERATION.POSITION_FORMULAS.BOTTOM(x, y, z, t, b),
    '–¶–æ–∫–æ–ª—å –ø–µ—Ä–µ–¥–Ω–∏–π': CABINET_DNA.GENERATION.POSITION_FORMULAS.FRONT_BASE(x, y, z, t, b),
    '–¶–æ–∫–æ–ª—å –∑–∞–¥–Ω–∏–π': CABINET_DNA.GENERATION.POSITION_FORMULAS.BACK_BASE(x, y, z, t, b),
    '–ë–æ–∫–æ–≤–∏–Ω–∞ –ª–µ–≤–∞—è': CABINET_DNA.GENERATION.POSITION_FORMULAS.LEFT_SIDE(x, y, z, t, b),
    '–ë–æ–∫–æ–≤–∏–Ω–∞ –ø—Ä–∞–≤–∞—è': CABINET_DNA.GENERATION.POSITION_FORMULAS.RIGHT_SIDE(x, y, z, t, b)
};

const sizes = {
    '–ö—Ä—ã—à–∞': CABINET_DNA.GENERATION.SIZE_FORMULAS.TOP(x, y, z, t, b),
    '–î–Ω–æ': CABINET_DNA.GENERATION.SIZE_FORMULAS.BOTTOM(x, y, z, t, b),
    '–¶–æ–∫–æ–ª—å –ø–µ—Ä–µ–¥–Ω–∏–π': CABINET_DNA.GENERATION.SIZE_FORMULAS.FRONT_BASE(x, y, z, t, b),
    '–¶–æ–∫–æ–ª—å –∑–∞–¥–Ω–∏–π': CABINET_DNA.GENERATION.SIZE_FORMULAS.BACK_BASE(x, y, z, t, b),
    '–ë–æ–∫–æ–≤–∏–Ω–∞ –ª–µ–≤–∞—è': CABINET_DNA.GENERATION.SIZE_FORMULAS.LEFT_SIDE(x, y, z, t, b),
    '–ë–æ–∫–æ–≤–∏–Ω–∞ –ø—Ä–∞–≤–∞—è': CABINET_DNA.GENERATION.SIZE_FORMULAS.RIGHT_SIDE(x, y, z, t, b)
};

console.log('üìç –ü–û–ó–ò–¶–ò–ò –ü–ê–ù–ï–õ–ï–ô:');
for (const [name, pos] of Object.entries(positions)) {
    console.log(`${name}: x=${pos.x}, y=${pos.y}, z=${pos.z}`);
}

console.log('');
console.log('üìê –†–ê–ó–ú–ï–†–´ –ü–ê–ù–ï–õ–ï–ô:');
for (const [name, size] of Object.entries(sizes)) {
    console.log(`${name}: w=${size.width}, h=${size.height}, d=${size.depth}`);
}

console.log('');
console.log('üéØ –ê–ù–ê–õ–ò–ó –†–ê–°–ü–û–õ–û–ñ–ï–ù–ò–Ø –ü–û Y (–≤—ã—Å–æ—Ç–∞):');
console.log(`–ö—Ä—ã—à–∞ –≤–µ—Ä—Ö: y=${positions['–ö—Ä—ã—à–∞'].y}`);
console.log(`–ö—Ä—ã—à–∞ –Ω–∏–∑: y=${positions['–ö—Ä—ã—à–∞'].y + sizes['–ö—Ä—ã—à–∞'].height}`);
console.log(`–î–Ω–æ –≤–µ—Ä—Ö: y=${positions['–î–Ω–æ'].y}`);  
console.log(`–î–Ω–æ –Ω–∏–∑: y=${positions['–î–Ω–æ'].y + sizes['–î–Ω–æ'].height}`);
console.log(`–¶–æ–∫–æ–ª—å –≤–µ—Ä—Ö: y=${positions['–¶–æ–∫–æ–ª—å –ø–µ—Ä–µ–¥–Ω–∏–π'].y}`);
console.log(`–¶–æ–∫–æ–ª—å –Ω–∏–∑: y=${positions['–¶–æ–∫–æ–ª—å –ø–µ—Ä–µ–¥–Ω–∏–π'].y + sizes['–¶–æ–∫–æ–ª—å –ø–µ—Ä–µ–¥–Ω–∏–π'].height}`);

console.log('');
console.log('‚ö†Ô∏è –ü–†–û–ë–õ–ï–ú–´:');
const bottomTop = positions['–î–Ω–æ'].y;
const bottomBottom = positions['–î–Ω–æ'].y + sizes['–î–Ω–æ'].height;
const baseTop = positions['–¶–æ–∫–æ–ª—å –ø–µ—Ä–µ–¥–Ω–∏–π'].y;

console.log(`–î–Ω–æ –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –Ω–∞ –≤—ã—Å–æ—Ç–µ: ${bottomTop}–º–º –æ—Ç –≤–µ—Ä—Ö–∞`);
console.log(`–¶–æ–∫–æ–ª—å –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –Ω–∞ –≤—ã—Å–æ—Ç–µ: ${baseTop}–º–º –æ—Ç –≤–µ—Ä—Ö–∞`);
console.log(`–†–∞–∑–Ω–∏—Ü–∞ –º–µ–∂–¥—É –¥–Ω–æ–º –∏ —Ü–æ–∫–æ–ª–µ–º: ${baseTop - bottomTop}–º–º`);

if (baseTop - bottomTop < 20) {
    console.log('‚ùå –ü–†–û–ë–õ–ï–ú–ê: –î–Ω–æ —Å–ª–∏—à–∫–æ–º –±–ª–∏–∑–∫–æ –∫ —Ü–æ–∫–æ–ª—é!');
    console.log('   –ù–∞ —Å—Ö–µ–º–µ –æ–Ω–∏ –º–æ–≥—É—Ç –ø–µ—Ä–µ–∫—Ä—ã–≤–∞—Ç—å—Å—è –∏–ª–∏ –±—ã—Ç—å –Ω–µ—Ä–∞–∑–ª–∏—á–∏–º—ã');
}
