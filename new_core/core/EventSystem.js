// üì° –°–ò–°–¢–ï–ú–ê –°–û–ë–´–¢–ò–ô - –†–µ–∞–∫—Ç–∏–≤–Ω–æ–µ —è–¥—Ä–æ –∞—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä—ã
// –û–±–µ—Å–ø–µ—á–∏–≤–∞–µ—Ç –¥–µ—Ü–µ–Ω—Ç—Ä–∞–ª–∏–∑–æ–≤–∞–Ω–Ω—É—é —Å–≤—è–∑—å –º–µ–∂–¥—É –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞–º–∏

"use strict";

/**
 * üì° –ì–õ–û–ë–ê–õ–¨–ù–ê–Ø –°–ò–°–¢–ï–ú–ê –°–û–ë–´–¢–ò–ô
 * –¶–µ–Ω—Ç—Ä–∞–ª–∏–∑–æ–≤–∞–Ω–Ω–∞—è —Å–∏—Å—Ç–µ–º–∞ –¥–ª—è –º–µ–∂–∫–æ–º–ø–æ–Ω–µ–Ω—Ç–Ω–æ–π –∫–æ–º–º—É–Ω–∏–∫–∞—Ü–∏–∏
 * –û–±–µ—Å–ø–µ—á–∏–≤–∞–µ—Ç —Å–ª–∞–±—É—é —Å–≤—è–∑–∞–Ω–Ω–æ—Å—Ç—å –∏ —Ä–µ–∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å
 */
export class EventSystem {
    constructor() {
        // üîí –ü—Ä–∏–≤–∞—Ç–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ —á–µ—Ä–µ–∑ –∑–∞–º—ã–∫–∞–Ω–∏—è
        let _globalListeners = new Map(); // event -> Set<listener>
        let _namespaceListeners = new Map(); // namespace -> Map<event, Set<listener>>
        let _eventHistory = []; // –∏—Å—Ç–æ—Ä–∏—è —Å–æ–±—ã—Ç–∏–π –¥–ª—è –æ—Ç–ª–∞–¥–∫–∏
        let _maxHistorySize = 1000;
        let _isEnabled = true;
        
        // –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ —Å–∏—Å—Ç–µ–º—ã
        let _stats = {
            totalEvents: 0,
            totalListeners: 0,
            namespaces: 0,
            errors: 0
        };
        
        // ===============================================
        // üì° –ü–û–î–ü–ò–°–ö–ê –ù–ê –°–û–ë–´–¢–ò–Ø
        // ===============================================
        
        /**
         * üëÇ –ü–æ–¥–ø–∏—Å–∫–∞ –Ω–∞ –≥–ª–æ–±–∞–ª—å–Ω–æ–µ —Å–æ–±—ã—Ç–∏–µ
         * @param {string} eventName - –Ω–∞–∑–≤–∞–Ω–∏–µ —Å–æ–±—ã—Ç–∏—è
         * @param {Function} listener - –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ —Å–æ–±—ã—Ç–∏—è  
         * @param {Object} options - –æ–ø—Ü–∏–∏ –ø–æ–¥–ø–∏—Å–∫–∏
         * @returns {Function} - —Ñ—É–Ω–∫—Ü–∏—è –æ—Ç–ø–∏—Å–∫–∏
         */
        this.on = (eventName, listener, options = {}) => {
            if (typeof listener !== 'function') {
                throw new Error('Listener must be a function');
            }
            
            if (!_isEnabled) {
                console.warn('EventSystem is disabled');
                return () => {};
            }
            
            // –°–æ–∑–¥–∞–µ–º Set –¥–ª—è —Å–æ–±—ã—Ç–∏—è –µ—Å–ª–∏ –µ–≥–æ –Ω–µ—Ç
            if (!_globalListeners.has(eventName)) {
                _globalListeners.set(eventName, new Set());
            }
            
            // –†–∞—Å—à–∏—Ä–µ–Ω–Ω—ã–π listener —Å –º–µ—Ç–∞–¥–∞–Ω–Ω—ã–º–∏
            const wrappedListener = {
                original: listener,
                created: Date.now(),
                options: { ...options },
                namespace: 'global',
                calls: 0
            };
            
            _globalListeners.get(eventName).add(wrappedListener);
            _stats.totalListeners++;
            
            // –í–æ–∑–≤—Ä–∞—â–∞–µ–º —Ñ—É–Ω–∫—Ü–∏—é –æ—Ç–ø–∏—Å–∫–∏
            return () => {
                const listeners = _globalListeners.get(eventName);
                if (listeners) {
                    listeners.delete(wrappedListener);
                    _stats.totalListeners--;
                }
            };
        };
        
        /**
         * üëÇ –ü–æ–¥–ø–∏—Å–∫–∞ –Ω–∞ —Å–æ–±—ã—Ç–∏–µ –≤ –ø—Ä–æ—Å—Ç—Ä–∞–Ω—Å—Ç–≤–µ –∏–º–µ–Ω
         * @param {string} namespace - –ø—Ä–æ—Å—Ç—Ä–∞–Ω—Å—Ç–≤–æ –∏–º–µ–Ω 
         * @param {string} eventName - –Ω–∞–∑–≤–∞–Ω–∏–µ —Å–æ–±—ã—Ç–∏—è
         * @param {Function} listener - –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ —Å–æ–±—ã—Ç–∏—è
         * @param {Object} options - –æ–ø—Ü–∏–∏ –ø–æ–¥–ø–∏—Å–∫–∏
         * @returns {Function} - —Ñ—É–Ω–∫—Ü–∏—è –æ—Ç–ø–∏—Å–∫–∏
         */
        this.onNamespace = (namespace, eventName, listener, options = {}) => {
            if (typeof listener !== 'function') {
                throw new Error('Listener must be a function');
            }
            
            if (!_isEnabled) {
                console.warn('EventSystem is disabled');
                return () => {};
            }
            
            // –°–æ–∑–¥–∞–µ–º namespace –µ—Å–ª–∏ –µ–≥–æ –Ω–µ—Ç
            if (!_namespaceListeners.has(namespace)) {
                _namespaceListeners.set(namespace, new Map());
                _stats.namespaces++;
            }
            
            const nsMap = _namespaceListeners.get(namespace);
            
            // –°–æ–∑–¥–∞–µ–º Set –¥–ª—è —Å–æ–±—ã—Ç–∏—è –µ—Å–ª–∏ –µ–≥–æ –Ω–µ—Ç
            if (!nsMap.has(eventName)) {
                nsMap.set(eventName, new Set());
            }
            
            // –†–∞—Å—à–∏—Ä–µ–Ω–Ω—ã–π listener —Å –º–µ—Ç–∞–¥–∞–Ω–Ω—ã–º–∏
            const wrappedListener = {
                original: listener,
                created: Date.now(),
                options: { ...options },
                namespace: namespace,
                calls: 0
            };
            
            nsMap.get(eventName).add(wrappedListener);
            _stats.totalListeners++;
            
            // –í–æ–∑–≤—Ä–∞—â–∞–µ–º —Ñ—É–Ω–∫—Ü–∏—é –æ—Ç–ø–∏—Å–∫–∏
            return () => {
                const listeners = nsMap.get(eventName);
                if (listeners) {
                    listeners.delete(wrappedListener);
                    _stats.totalListeners--;
                }
            };
        };
        
        // ===============================================
        // üì§ –û–¢–ü–†–ê–í–ö–ê –°–û–ë–´–¢–ò–ô
        // ===============================================
        
        /**
         * üì§ –û—Ç–ø—Ä–∞–≤–∫–∞ –≥–ª–æ–±–∞–ª—å–Ω–æ–≥–æ —Å–æ–±—ã—Ç–∏—è
         * @param {string} eventName - –Ω–∞–∑–≤–∞–Ω–∏–µ —Å–æ–±—ã—Ç–∏—è
         * @param {Object} data - –¥–∞–Ω–Ω—ã–µ —Å–æ–±—ã—Ç–∏—è
         * @param {Object} options - –æ–ø—Ü–∏–∏ –æ—Ç–ø—Ä–∞–≤–∫–∏
         */
        this.emit = (eventName, data = {}, options = {}) => {
            if (!_isEnabled) {
                return;
            }
            
            const event = this._createEvent(eventName, data, 'global', options);
            this._recordEvent(event);
            
            // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –≥–ª–æ–±–∞–ª—å–Ω—ã–º —Å–ª—É—à–∞—Ç–µ–ª—è–º
            this._dispatchToListeners(_globalListeners.get(eventName), event);
            
            _stats.totalEvents++;
        };
        
        /**
         * üì§ –û—Ç–ø—Ä–∞–≤–∫–∞ —Å–æ–±—ã—Ç–∏—è –≤ –ø—Ä–æ—Å—Ç—Ä–∞–Ω—Å—Ç–≤–æ –∏–º–µ–Ω
         * @param {string} namespace - –ø—Ä–æ—Å—Ç—Ä–∞–Ω—Å—Ç–≤–æ –∏–º–µ–Ω
         * @param {string} eventName - –Ω–∞–∑–≤–∞–Ω–∏–µ —Å–æ–±—ã—Ç–∏—è
         * @param {Object} data - –¥–∞–Ω–Ω—ã–µ —Å–æ–±—ã—Ç–∏—è
         * @param {Object} options - –æ–ø—Ü–∏–∏ –æ—Ç–ø—Ä–∞–≤–∫–∏
         */
        this.emitNamespace = (namespace, eventName, data = {}, options = {}) => {
            if (!_isEnabled) {
                return;
            }
            
            const event = this._createEvent(eventName, data, namespace, options);
            this._recordEvent(event);
            
            // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–ª—É—à–∞—Ç–µ–ª—è–º –≤ namespace
            const nsMap = _namespaceListeners.get(namespace);
            if (nsMap) {
                this._dispatchToListeners(nsMap.get(eventName), event);
            }
            
            // –¢–∞–∫–∂–µ –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º –≥–ª–æ–±–∞–ª—å–Ω—ã–º —Å–ª—É—à–∞—Ç–µ–ª—è–º –µ—Å–ª–∏ —Ä–∞–∑—Ä–µ—à–µ–Ω–æ
            if (!options.namespaceOnly) {
                this._dispatchToListeners(_globalListeners.get(eventName), event);
            }
            
            _stats.totalEvents++;
        };
        
        /**
         * üì§ –®–∏—Ä–æ–∫–æ–≤–µ—â–∞—Ç–µ–ª—å–Ω–∞—è –æ—Ç–ø—Ä–∞–≤–∫–∞ (–≤—Å–µ–º namespace)
         * @param {string} eventName - –Ω–∞–∑–≤–∞–Ω–∏–µ —Å–æ–±—ã—Ç–∏—è
         * @param {Object} data - –¥–∞–Ω–Ω—ã–µ —Å–æ–±—ã—Ç–∏—è
         * @param {Object} options - –æ–ø—Ü–∏–∏ –æ—Ç–ø—Ä–∞–≤–∫–∏
         */
        this.broadcast = (eventName, data = {}, options = {}) => {
            if (!_isEnabled) {
                return;
            }
            
            const event = this._createEvent(eventName, data, 'broadcast', options);
            this._recordEvent(event);
            
            // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –≤—Å–µ–º namespace
            for (const [namespace, nsMap] of _namespaceListeners) {
                this._dispatchToListeners(nsMap.get(eventName), event);
            }
            
            // –ò –≥–ª–æ–±–∞–ª—å–Ω—ã–º —Ç–æ–∂–µ
            this._dispatchToListeners(_globalListeners.get(eventName), event);
            
            _stats.totalEvents++;
        };
        
        // ===============================================
        // üîß –í–ù–£–¢–†–ï–ù–ù–ò–ï –ú–ï–¢–û–î–´
        // ===============================================
        
        /**
         * üèóÔ∏è –°–æ–∑–¥–∞–Ω–∏–µ –æ–±—ä–µ–∫—Ç–∞ —Å–æ–±—ã—Ç–∏—è
         * @private
         */
        this._createEvent = (eventName, data, namespace, options) => {
            return Object.freeze({
                name: eventName,
                data: Object.freeze({ ...data }),
                namespace: namespace,
                timestamp: Date.now(),
                id: `${namespace}_${eventName}_${Date.now()}_${Math.random().toString(36).substr(2, 5)}`,
                options: Object.freeze({ ...options }),
                source: 'EventSystem'
            });
        };
        
        /**
         * üìù –ó–∞–ø–∏—Å—å —Å–æ–±—ã—Ç–∏—è –≤ –∏—Å—Ç–æ—Ä–∏—é
         * @private
         */
        this._recordEvent = (event) => {
            _eventHistory.push(event);
            
            // –û–≥—Ä–∞–Ω–∏—á–∏–≤–∞–µ–º —Ä–∞–∑–º–µ—Ä –∏—Å—Ç–æ—Ä–∏–∏
            if (_eventHistory.length > _maxHistorySize) {
                _eventHistory = _eventHistory.slice(-_maxHistorySize);
            }
        };
        
        /**
         * üì° –û—Ç–ø—Ä–∞–≤–∫–∞ —Å–æ–±—ã—Ç–∏—è —Å–ª—É—à–∞—Ç–µ–ª—è–º
         * @private
         */
        this._dispatchToListeners = (listeners, event) => {
            if (!listeners || listeners.size === 0) {
                return;
            }
            
            for (const wrappedListener of listeners) {
                try {
                    // –£–≤–µ–ª–∏—á–∏–≤–∞–µ–º —Å—á–µ—Ç—á–∏–∫ –≤—ã–∑–æ–≤–æ–≤
                    wrappedListener.calls++;
                    
                    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –ª–∏–º–∏—Ç –≤—ã–∑–æ–≤–æ–≤ –µ—Å–ª–∏ –µ—Å—Ç—å
                    if (wrappedListener.options.maxCalls && 
                        wrappedListener.calls > wrappedListener.options.maxCalls) {
                        continue;
                    }
                    
                    // –í—ã–∑—ã–≤–∞–µ–º –æ—Ä–∏–≥–∏–Ω–∞–ª—å–Ω—ã–π listener
                    wrappedListener.original(event);
                    
                } catch (error) {
                    _stats.errors++;
                    console.error(`Error in event listener for ${event.name}:`, error);
                    
                    // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–±—ã—Ç–∏–µ –æ–± –æ—à–∏–±–∫–µ
                    this._safeEmit('system:listener-error', {
                        originalEvent: event,
                        error: error.message,
                        listener: wrappedListener
                    });
                }
            }
        };
        
        /**
         * üîí –ë–µ–∑–æ–ø–∞—Å–Ω–∞—è –æ—Ç–ø—Ä–∞–≤–∫–∞ (–±–µ–∑ —Ä–∏—Å–∫–æ–≤–∞–Ω–∏—è –∑–∞—Ü–∏–∫–ª–∏–≤–∞–Ω–∏—è)
         * @private
         */
        this._safeEmit = (eventName, data) => {
            // –ü—Ä–æ—Å—Ç–∞—è –æ—Ç–ø—Ä–∞–≤–∫–∞ –±–µ–∑ –∑–∞–ø–∏—Å–∏ –≤ –∏—Å—Ç–æ—Ä–∏—é
            const listeners = _globalListeners.get(eventName);
            if (listeners) {
                for (const listener of listeners) {
                    try {
                        listener.original({ name: eventName, data, timestamp: Date.now() });
                    } catch (error) {
                        console.error('Error in safe emit:', error);
                    }
                }
            }
        };
        
        // ===============================================
        // üìä –£–ü–†–ê–í–õ–ï–ù–ò–ï –ò –ú–û–ù–ò–¢–û–†–ò–ù–ì
        // ===============================================
        
        /**
         * üìä –ü–æ–ª—É—á–∏—Ç—å —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É —Å–∏—Å—Ç–µ–º—ã
         * @returns {Object}
         */
        this.getStats = () => {
            return Object.freeze({
                ..._stats,
                globalEvents: _globalListeners.size,
                historySize: _eventHistory.length,
                isEnabled: _isEnabled
            });
        };
        
        /**
         * üìã –ü–æ–ª—É—á–∏—Ç—å –∏—Å—Ç–æ—Ä–∏—é —Å–æ–±—ã—Ç–∏–π
         * @param {number} limit - –ª–∏–º–∏—Ç –∑–∞–ø–∏—Å–µ–π
         * @returns {Array}
         */
        this.getHistory = (limit = 100) => {
            return _eventHistory.slice(-limit);
        };
        
        /**
         * üîç –ü–æ–∏—Å–∫ –≤ –∏—Å—Ç–æ—Ä–∏–∏ —Å–æ–±—ã—Ç–∏–π
         * @param {Function} predicate - —Ñ—É–Ω–∫—Ü–∏—è —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏–∏
         * @returns {Array}
         */
        this.searchHistory = (predicate) => {
            return _eventHistory.filter(predicate);
        };
        
        /**
         * üßπ –û—á–∏—Å—Ç–∫–∞ –∏—Å—Ç–æ—Ä–∏–∏ —Å–æ–±—ã—Ç–∏–π
         */
        this.clearHistory = () => {
            _eventHistory = [];
        };
        
        /**
         * üîå –í–∫–ª—é—á–µ–Ω–∏–µ/–≤—ã–∫–ª—é—á–µ–Ω–∏–µ —Å–∏—Å—Ç–µ–º—ã
         * @param {boolean} enabled
         */
        this.setEnabled = (enabled) => {
            _isEnabled = !!enabled;
        };
        
        /**
         * üßπ –ü–æ–ª–Ω–∞—è –æ—á–∏—Å—Ç–∫–∞ —Å–∏—Å—Ç–µ–º—ã
         */
        this.reset = () => {
            _globalListeners.clear();
            _namespaceListeners.clear();
            _eventHistory = [];
            _stats = {
                totalEvents: 0,
                totalListeners: 0,
                namespaces: 0,
                errors: 0
            };
        };
        
        /**
         * üìã –ü–æ–ª—É—á–∏—Ç—å –≤—Å–µ –∞–∫—Ç–∏–≤–Ω—ã–µ —Å–ª—É—à–∞—Ç–µ–ª–∏
         * @returns {Object}
         */
        this.getActiveListeners = () => {
            const result = {
                global: {},
                namespaces: {}
            };
            
            // –ì–ª–æ–±–∞–ª—å–Ω—ã–µ —Å–ª—É—à–∞—Ç–µ–ª–∏
            for (const [event, listeners] of _globalListeners) {
                result.global[event] = listeners.size;
            }
            
            // –°–ª—É—à–∞—Ç–µ–ª–∏ –≤ namespace
            for (const [namespace, nsMap] of _namespaceListeners) {
                result.namespaces[namespace] = {};
                for (const [event, listeners] of nsMap) {
                    result.namespaces[namespace][event] = listeners.size;
                }
            }
            
            return Object.freeze(result);
        };
        
        // ===============================================
        // üîí –§–ò–ù–ê–õ–¨–ù–ê–Ø –ó–ê–©–ò–¢–ê
        // ===============================================
        
        // –ó–∞–º–æ—Ä–∞–∂–∏–≤–∞–µ–º –º–µ—Ç–æ–¥—ã
        Object.freeze(this.on);
        Object.freeze(this.onNamespace);
        Object.freeze(this.emit);
        Object.freeze(this.emitNamespace);
        Object.freeze(this.broadcast);
        Object.freeze(this.getStats);
        Object.freeze(this.getHistory);
        Object.freeze(this.searchHistory);
        Object.freeze(this.clearHistory);
        Object.freeze(this.setEnabled);
        Object.freeze(this.reset);
        Object.freeze(this.getActiveListeners);
        
        // –°–∏—Å—Ç–µ–º–∞ –≥–æ—Ç–æ–≤–∞
        Object.preventExtensions(this);
    }
}

// ===============================================
// üåê –ì–õ–û–ë–ê–õ–¨–ù–´–ô –≠–ö–ó–ï–ú–ü–õ–Ø–† –°–ò–°–¢–ï–ú–´ –°–û–ë–´–¢–ò–ô
// ===============================================

/**
 * üåê –ì–ª–æ–±–∞–ª—å–Ω—ã–π —ç–∫–∑–µ–º–ø–ª—è—Ä —Å–∏—Å—Ç–µ–º—ã —Å–æ–±—ã—Ç–∏–π
 * –ò—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –≤—Å–µ–º–∏ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞–º–∏ –∞—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä—ã
 */
export const GlobalEventSystem = new EventSystem();

// –≠–∫—Å–ø–æ—Ä—Ç–∏—Ä—É–µ–º —Å–∏—Å—Ç–µ–º—É –¥–ª—è —É–¥–æ–±—Å—Ç–≤–∞
export { GlobalEventSystem as Events };

console.log('üì° Event System loaded');
console.log('üìä Global Event System ready:', GlobalEventSystem.getStats());
