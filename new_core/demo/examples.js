/**
 * –ü—Ä–∏–º–µ—Ä—ã –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –∞—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä–Ω–æ–≥–æ —è–¥—Ä–∞
 * –î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—è —Ä–∞–±–æ—Ç—ã —Å —á–∏—Å—Ç—ã–º —è–¥—Ä–æ–º –±–µ–∑ UI
 */

import { SystemFactory } from '../index.js';

// ===============================================
// –ü—Ä–∏–º–µ—Ä 1: –°–æ–∑–¥–∞–Ω–∏–µ –ø—Ä–æ—Å—Ç–æ–≥–æ —à–∫–∞—Ñ–∞
// ===============================================

function example1_Simple–°abinet() {
    console.log('\n=== –ü—Ä–∏–º–µ—Ä 1: –ü—Ä–æ—Å—Ç–æ–π —à–∫–∞—Ñ ===\n');
    
    // –°–æ–∑–¥–∞–µ–º —Å–∏—Å—Ç–µ–º—É
    const system = SystemFactory.create();
    
    // –°–æ–∑–¥–∞–µ–º —à–∫–∞—Ñ
    const cabinet = system.createCabinet({
        width: 800,
        height: 2000,
        depth: 600,
        baseHeight: 100
    });
    
    // –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º –ø–∞–Ω–µ–ª–∏
    cabinet.generate();
    
    // –ü–æ–ª—É—á–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é
    const stats = cabinet.getStats();
    console.log('–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ —à–∫–∞—Ñ–∞:', stats);
    
    // –ü–æ–ª—É—á–∞–µ–º –ø–∞–Ω–µ–ª–∏
    const panels = cabinet.getPanels();
    console.log(`–°–æ–∑–¥–∞–Ω–æ –ø–∞–Ω–µ–ª–µ–π: ${panels.length}`);
    
    panels.forEach(panel => {
        console.log(`- ${panel.name}: ${panel.dimensions.width}x${panel.dimensions.height}x${panel.dimensions.thickness}`);
    });
}

// ===============================================
// –ü—Ä–∏–º–µ—Ä 2: –†–∞–±–æ—Ç–∞ —Å –º–∞—Ç–µ—Ä–∏–∞–ª–∞–º–∏
// ===============================================

function example2_Materials() {
    console.log('\n=== –ü—Ä–∏–º–µ—Ä 2: –ú–∞—Ç–µ—Ä–∏–∞–ª—ã ===\n');
    
    const system = SystemFactory.create();
    
    // –°–æ–∑–¥–∞–µ–º –º–∞—Ç–µ—Ä–∏–∞–ª—ã
    const ldsp = system.createLDSP16();
    const hdf = system.createHDF3();
    const mdf = system.createMDF16();
    
    console.log('–ú–∞—Ç–µ—Ä–∏–∞–ª—ã:');
    console.log(`- ${ldsp.name}: ${ldsp.thickness}–º–º`);
    console.log(`- ${hdf.name}: ${hdf.thickness}–º–º`);
    console.log(`- ${mdf.name}: ${mdf.thickness}–º–º`);
}

// ===============================================
// –ü—Ä–∏–º–µ—Ä 3: –°–æ–±—ã—Ç–∏—è —Å–∏—Å—Ç–µ–º—ã
// ===============================================

function example3_Events() {
    console.log('\n=== –ü—Ä–∏–º–µ—Ä 3: –°–æ–±—ã—Ç–∏—è ===\n');
    
    const system = SystemFactory.create({
        enableEvents: true
    });
    
    // –ü–æ–¥–ø–∏—Å—ã–≤–∞–µ–º—Å—è –Ω–∞ —Å–æ–±—ã—Ç–∏—è
    system.events.on('cabinet-generated', (data) => {
        console.log('–°–æ–±—ã—Ç–∏–µ: –®–∫–∞—Ñ —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω', data);
    });
    
    // –°–æ–∑–¥–∞–µ–º —à–∫–∞—Ñ
    const cabinet = system.createCabinet({
        width: 600,
        height: 1800,
        depth: 500,
        baseHeight: 80
    });
    
    cabinet.generate();
}

// ===============================================
// –ü—Ä–∏–º–µ—Ä 4: –í–∞–ª–∏–¥–∞—Ü–∏—è
// ===============================================

function example4_Validation() {
    console.log('\n=== –ü—Ä–∏–º–µ—Ä 4: –í–∞–ª–∏–¥–∞—Ü–∏—è ===\n');
    
    const system = SystemFactory.create({
        enableValidation: true
    });
    
    try {
        // –ü–æ–ø—ã—Ç–∫–∞ —Å–æ–∑–¥–∞—Ç—å —à–∫–∞—Ñ —Å –Ω–µ–≤–µ—Ä–Ω—ã–º–∏ –ø–∞—Ä–∞–º–µ—Ç—Ä–∞–º–∏
        const cabinet = system.createCabinet({
            width: 50, // –°–ª–∏—à–∫–æ–º –º–∞–ª–µ–Ω—å–∫–∞—è —à–∏—Ä–∏–Ω–∞
            height: 2000,
            depth: 600
        });
    } catch (error) {
        console.log('–û—à–∏–±–∫–∞ –≤–∞–ª–∏–¥–∞—Ü–∏–∏:', error.message);
    }
    
    // –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–∏—Å—Ç–µ–º—ã
    const validation = system.validate();
    console.log('–†–µ–∑—É–ª—å—Ç–∞—Ç –≤–∞–ª–∏–¥–∞—Ü–∏–∏ —Å–∏—Å—Ç–µ–º—ã:', validation);
}

// ===============================================
// –ü—Ä–∏–º–µ—Ä 5: –°–µ–∫—Ü–∏–∏
// ===============================================

function example5_Sections() {
    console.log('\n=== –ü—Ä–∏–º–µ—Ä 5: –°–µ–∫—Ü–∏–∏ ===\n');
    
    const system = SystemFactory.create();
    
    const cabinet = system.createCabinet({
        width: 1200,
        height: 2400,
        depth: 600,
        baseHeight: 100
    });
    
    cabinet.generate();
    
    // –ü–æ–ª—É—á–∞–µ–º —Å–µ–∫—Ü–∏–∏
    const sections = cabinet.getSections();
    console.log(`–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å–µ–∫—Ü–∏–π: ${sections.length}`);
    
    sections.forEach((section, index) => {
        console.log(`–°–µ–∫—Ü–∏—è ${index + 1}:`);
        console.log(`  - –ì—Ä–∞–Ω–∏—Ü—ã: ${section.bounds.x}, ${section.bounds.y}`);
        console.log(`  - –†–∞–∑–º–µ—Ä: ${section.bounds.width}x${section.bounds.height}`);
        console.log(`  - –ü—É—Å—Ç–∞—è: ${section.isEmpty}`);
    });
}

// ===============================================
// –ó–∞–ø—É—Å–∫ –ø—Ä–∏–º–µ—Ä–æ–≤
// ===============================================

if (typeof window === 'undefined') {
    // –ó–∞–ø—É—Å–∫–∞–µ–º —Ç–æ–ª—å–∫–æ –≤ Node.js
    console.log('üß¨ –î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—è –∞—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä–Ω–æ–≥–æ —è–¥—Ä–∞ Cabinet Designer\n');
    
    example1_Simple–°abinet();
    example2_Materials();
    example3_Events();
    example4_Validation();
    example5_Sections();
    
    console.log('\n‚úÖ –í—Å–µ –ø—Ä–∏–º–µ—Ä—ã –≤—ã–ø–æ–ª–Ω–µ–Ω—ã —É—Å–ø–µ—à–Ω–æ!');
}

// –≠–∫—Å–ø–æ—Ä—Ç–∏—Ä—É–µ–º –¥–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –≤ –±—Ä–∞—É–∑–µ—Ä–µ
export {
    example1_Simple–°abinet,
    example2_Materials,
    example3_Events,
    example4_Validation,
    example5_Sections
};